<?php

namespace AppBundle\Entity;

use Doctrine\ORM\Mapping as ORM;

use \AppBundle\Entity\ConfigOption;

/**
 * OptionValue
 *
 * @ORM\Table(name="nsdh_option_value")
 * @ORM\Entity(repositoryClass="AppBundle\Repository\OptionValueRepository")
 */
class OptionValue
{
    public function __toString()
    {
        $type = $this->configOption->getType();
        switch ($type) {
            case ConfigOption::OPTION_TEXT: 
            case ConfigOption::OPTION_TEXT_REQUIRED:
            case ConfigOption::OPTION_CHECKBOX:
                return $this->value;
                
            case ConfigOption::OPTION_CHOICE:
            case ConfigOption::OPTION_CHOICE_REQUIRED: 
                $optionChoice = $this->getOptionChoice();
                return !empty($optionChoice) ? $optionChoice->getValue() : "S/O";
                
            default:
                return $this->value;
        }
    }
    
    /**
     * @var int
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;
    
    /**
     * @ORM\ManyToOne(targetEntity="ConfigOption")
     * @ORM\JoinColumn(onDelete="CASCADE", nullable=false)
     */
    private $configOption;

    /**
     * @var string
     *
     * @ORM\Column(name="value", type="string", length=255, nullable=true)
     */
    private $value;

    /**
     * @ORM\ManyToOne(targetEntity="OptionChoice")
     * @ORM\JoinColumn(onDelete="SET NULL", nullable=true)
     */
    private $optionChoice;

    /**
     * @ORM\ManyToOne(targetEntity="CompanyConfig", cascade={"persist"}, inversedBy="optionValues")
     * @ORM\JoinColumn(onDelete="CASCADE", nullable=false)
     */
    public $companyConfig;
    
    /**
     * Get id
     *
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set configOption
     *
     * @param \AppBundle\Entity\ConfigOption $configOption
     *
     * @return OptionValue
     */
    public function setConfigOption(\AppBundle\Entity\ConfigOption $configOption = null)
    {
        $this->configOption = $configOption;

        return $this;
    }

    /**
     * Get configOption
     *
     * @return \AppBundle\Entity\ConfigOption
     */
    public function getConfigOption()
    {
        return $this->configOption;
    }
    
    /**
     * Set value
     *
     * @param string $value
     *
     * @return OptionValue
     */
    public function setValue($value)
    {
        $this->value = $value;

        return $this;
    }

    /**
     * Get value
     *
     * @return string
     */
    public function getValue()
    {
        return $this->value;
    }


    /**
     * Set optionChoice
     *
     * @param \AppBundle\Entity\OptionChoice $optionChoice
     *
     * @return OptionValue
     */
    public function setOptionChoice(\AppBundle\Entity\OptionChoice $optionChoice = null)
    {
        $this->optionChoice = $optionChoice;

        return $this;
    }

    /**
     * Get optionChoice
     *
     * @return \AppBundle\Entity\OptionChoice
     */
    public function getOptionChoice()
    {
        return $this->optionChoice;
    }

    /**
     * Set companyConfig
     *
     * @param \AppBundle\Entity\CompanyConfig $companyConfig
     *
     * @return OptionValue
     */
    public function setCompanyConfig(\AppBundle\Entity\CompanyConfig $companyConfig)
    {
        $this->companyConfig = $companyConfig;

        return $this;
    }

    /**
     * Get companyConfig
     *
     * @return \AppBundle\Entity\CompanyConfig
     */
    public function getCompanyConfig()
    {
        return $this->companyConfig;
    }
}
